server:
  port: 8080

# spring:
#   security:
#     oauth2:
#       resourceserver:
#         jwt:
#           secret-key: ${JWT_SECRET:myTopSecretKey}

  cloud:
    gateway:
      # rimuove eventuali cookie in ingresso (opzionale)
      default-filters:
        - RemoveRequestHeader=Cookie

      routes:
        # rotta pubblica: nessun JWT richiesto
        - id: auth
          uri: http://auth-service:8081
          predicates:
            - Path=/api/auth/**
            - Path=/api/admin/**
          filters:
            - StripPrefix=1

        - id: structures
          uri: http://structure-service:8082
          predicates:
            - Path=/api/structures/**
          filters:
            - StripPrefix=1

        - id: guests
          uri: http://guest-service:8083
          predicates:
            - Path=/api/guests/**
          filters:
            - StripPrefix=1

        - id: bookings
          uri: http://booking-service:8084
          predicates:
            - Path=/api/bookings/**
          filters:
            - StripPrefix=1

        - id: alloggiati
          uri: http://alloggiati-web-service:8080
          predicates:
            - Path=/api/alloggiati/**
          filters:
            - StripPrefix=1

    globalcors:
      corsConfigurations:
        '[/**]':
          allowedOrigins: "http://localhost:5173"
          allowedMethods:
            - GET
            - POST
            - PUT
            - DELETE
            - OPTIONS
          allowedHeaders: "*"
          allowCredentials: true